// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/naoki.miyoshi/Data/pjct/en/en/backend/test/scripts/../../internal/adapter/driven/secretsmanager/interface.go

// Package mock_secretsmanager is a generated GoMock package.
package mock_secretsmanager

import (
	context "context"
	reflect "reflect"

	secretsmanager "github.com/g-stayfresh/en/backend/internal/adapter/driven/secretsmanager"
	gomock "github.com/golang/mock/gomock"
)

// MockSecretsManagerClientInterface is a mock of SecretsManagerClientInterface interface.
type MockSecretsManagerClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsManagerClientInterfaceMockRecorder
}

// MockSecretsManagerClientInterfaceMockRecorder is the mock recorder for MockSecretsManagerClientInterface.
type MockSecretsManagerClientInterfaceMockRecorder struct {
	mock *MockSecretsManagerClientInterface
}

// NewMockSecretsManagerClientInterface creates a new mock instance.
func NewMockSecretsManagerClientInterface(ctrl *gomock.Controller) *MockSecretsManagerClientInterface {
	mock := &MockSecretsManagerClientInterface{ctrl: ctrl}
	mock.recorder = &MockSecretsManagerClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsManagerClientInterface) EXPECT() *MockSecretsManagerClientInterfaceMockRecorder {
	return m.recorder
}

// GetSecret mocks base method.
func (m *MockSecretsManagerClientInterface) GetSecret(ctx context.Context, secretsID string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", ctx, secretsID)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockSecretsManagerClientInterfaceMockRecorder) GetSecret(ctx, secretsID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockSecretsManagerClientInterface)(nil).GetSecret), ctx, secretsID)
}

// MockSecretsManagerAdapterInterface is a mock of SecretsManagerAdapterInterface interface.
type MockSecretsManagerAdapterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsManagerAdapterInterfaceMockRecorder
}

// MockSecretsManagerAdapterInterfaceMockRecorder is the mock recorder for MockSecretsManagerAdapterInterface.
type MockSecretsManagerAdapterInterfaceMockRecorder struct {
	mock *MockSecretsManagerAdapterInterface
}

// NewMockSecretsManagerAdapterInterface creates a new mock instance.
func NewMockSecretsManagerAdapterInterface(ctrl *gomock.Controller) *MockSecretsManagerAdapterInterface {
	mock := &MockSecretsManagerAdapterInterface{ctrl: ctrl}
	mock.recorder = &MockSecretsManagerAdapterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsManagerAdapterInterface) EXPECT() *MockSecretsManagerAdapterInterfaceMockRecorder {
	return m.recorder
}

// GetDBAccount mocks base method.
func (m *MockSecretsManagerAdapterInterface) GetDBAccount(ctx context.Context) secretsmanager.DBAccount {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDBAccount", ctx)
	ret0, _ := ret[0].(secretsmanager.DBAccount)
	return ret0
}

// GetDBAccount indicates an expected call of GetDBAccount.
func (mr *MockSecretsManagerAdapterInterfaceMockRecorder) GetDBAccount(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDBAccount", reflect.TypeOf((*MockSecretsManagerAdapterInterface)(nil).GetDBAccount), ctx)
}
