// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/naoki.miyoshi/Data/pjct/en/en/backend/test/scripts/../../internal/adapter/driven/rdb/interface.go

// Package mock_rdbadapter is a generated GoMock package.
package mock_rdbadapter

import (
	reflect "reflect"

	rdb "github.com/g-stayfresh/en/backend/internal/adapter/driven/rdb"
	gomock "github.com/golang/mock/gomock"
)

// MockRdbInterface is a mock of RdbInterface interface.
type MockRdbInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRdbInterfaceMockRecorder
}

// MockRdbInterfaceMockRecorder is the mock recorder for MockRdbInterface.
type MockRdbInterfaceMockRecorder struct {
	mock *MockRdbInterface
}

// NewMockRdbInterface creates a new mock instance.
func NewMockRdbInterface(ctrl *gomock.Controller) *MockRdbInterface {
	mock := &MockRdbInterface{ctrl: ctrl}
	mock.recorder = &MockRdbInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRdbInterface) EXPECT() *MockRdbInterfaceMockRecorder {
	return m.recorder
}

// GetCustomerByID mocks base method.
func (m *MockRdbInterface) GetCustomerByID(customerID int64) (*rdb.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomerByID", customerID)
	ret0, _ := ret[0].(*rdb.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomerByID indicates an expected call of GetCustomerByID.
func (mr *MockRdbInterfaceMockRecorder) GetCustomerByID(customerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomerByID", reflect.TypeOf((*MockRdbInterface)(nil).GetCustomerByID), customerID)
}
